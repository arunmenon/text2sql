# Metadata Registry Configuration

# Registry settings
storage_path: "./registry_data"  # Where to store registry state

# Discovery feed configuration
feeds:
  # File-based feed
  - name: local_config
    type: file
    enabled: true
    directory: "./services"  # Directory with service definitions
    pattern: "*.{json,yaml,yml}"
    poll_interval: 30  # Check for changes every 30 seconds
  
  # HTTP-based feed (can discover remote services)
  - name: remote_registry
    type: http
    enabled: true
    urls:
      - "https://example.com/services/registry.json"
    poll_interval: 300  # Poll every 5 minutes
  
  # Plugin-based feed (can discover plugins in code)
  - name: plugins
    type: plugin
    enabled: true
    plugin_dirs:
      - "./plugins"
      - "./src/mcp/registry/adapters"

# Neo4j service definition
services:
  - service_id: kg-neo4j
    name: knowledge_graph
    description: "Knowledge Graph for text-to-SQL operations"
    service_type: "neo4j"
    version: "1.0.0"
    endpoints:
      uri: ${NEO4J_URI:-neo4j://localhost:7687}
    metadata:
      username: ${NEO4J_USER:-neo4j}
      password: ${NEO4J_PASSWORD:-password}
      verification:
        type: "local"
        host: "localhost"
    operations:
      - name: query
        description: "Run a Cypher query against the knowledge graph"
        schema:
          type: object
          properties:
            query:
              type: string
              description: "Valid Cypher query string to execute"
            parameters:
              type: object
              description: "Optional parameters for the Cypher query"
          required:
            - query
      
      - name: get_table_schema
        description: "Get detailed schema information for a table with column metadata"
        schema:
          type: object
          properties:
            table_name:
              type: string
              description: "Name of the table to retrieve schema for"
            include_relationships:
              type: boolean
              description: "Whether to include relationships to other tables (default: false)"
          required:
            - table_name
      
      - name: find_relationships
        description: "Find relationships between two entities in the knowledge graph"
        schema:
          type: object
          properties:
            source:
              type: string
              description: "Name of the source entity"
            target:
              type: string
              description: "Name of the target entity"
            max_depth:
              type: integer
              description: "Maximum path length to consider (default: 3)"
          required:
            - source
            - target
      
      - name: search_business_terms
        description: "Search for business terms by keyword"
        schema:
          type: object
          properties:
            keyword:
              type: string
              description: "Search keyword for business terms"
          required:
            - keyword
      
      - name: recommend_tables_for_query
        description: "Suggest relevant tables based on a natural language query"
        schema:
          type: object
          properties:
            query:
              type: string
              description: "Natural language query to analyze"
            limit:
              type: integer
              description: "Maximum number of tables to recommend (default: 5)"
          required:
            - query